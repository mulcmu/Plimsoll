#make menuconfig options
# MCU architecture: STM32
# Processor model: STM32F072
# No bootloader offset
# Clock reference: Internal
# Communication interface: USB on PA11/PA12

#optional to have D1 as power led
# Pins to set at startup: PC7

[mcu plimsoll]
serial:  /dev/serial/by-id/usb-Klipper_stm32f072xb_2A0021000B57464232313920-if00
restart_method: command


[load_cell_probe]
sensor_type: hx717
sclk_pin: plimsoll:PC1
dout_pin: plimsoll:PC2
sensor_orientation: inverted
counts_per_gram = 68.54675
reference_tare_counts = 1465556
force_safety_limit: 1000
trigger_force: 75
z_offset: 0.0 #the distance between nozzle and level switch
speed: 2.0
samples: 5 
samples_result: average
sample_retract_dist: 1
samples_tolerance: 0.01
samples_tolerance_retries: 5

#drift_filter_cutoff_frequency: 0.8
#   Enable optional continuous taring while homing & probing to reject drift.
#   The value is a frequency, in Hz, below which drift will be ignored. This
#   option requires the SciPy library. Default: None
buzz_filter_cutoff_frequency: 100.0
#   The value is a frequency, in Hz, above which high frequency noise in the
#   load cell will be igfiltered outnored. This option requires the SciPy
#   library. Default: None
notch_filter_frequencies: 50, 60
#   1 or 2 frequencies, in Hz, to filter out of the load cell data. This is
#   intended to reject power line noise. This option requires the SciPy
#   library. Default: None
#notch_filter_quality: 2.0
#   Controls how narrow the range of frequencies are that the notch filter
#   removes. Larger numbers produce a narrower filter. Minimum value is 0.5 and
#   maximum is 3.0. Default: 2.0
#tare_samples:
#   The number of samples to use when automatically taring the load_cell before
#   each probe. The default value is: sample_per_second * (1 / 60) * 4. This
#   collects samples from 4 cycles of 60Hz mains power to cancel power line
#   noise.
# pullback_distance: 0.2
#   The length of the pullback move. The default is 0.2mm and is a safe
#   starting point for most beds. This can be decreased if the motion system
# is very ridgid
#pullback_speed:
#   The speed of the pullback move. The default value is 1.0 micron per sensor
#   sample. Increasing this value will speed up the move and reduce accuracy.
#tap_buzz_filter_cutoff_frequency: 70
#   Filter out high frequency noise in the probe force data before doing Tap
#   Analysis. Frequencies above this number will be filtered with a
#   Butterworth filter. This option requires the SciPy library. Default: None
#tap_buzz_filter_order: 4
#   This is the order of the Butterworth filter. Higher order numbers
#   increase the complexity of the filter and the sharpness of the cutoff.
#   Default: 4.
notch_filter_frequencies: 50, 60
#   Filter out specific frequencies of noise in the probe force data before
#   doing Tap Analysis. Up to 6 frequencies may be specified. This
#   option requires the SciPy library. Default: None.
notch_filter_quality: 2.0
#   Controls how narrow the range of frequencies are that the tap notch filter
#   removes. Larger numbers produce a narrower filter. Minimum value is 0.5 and
#   maximum is 3.0. Default: 2.0
#bad_tap_retries: 1
#   Number of attempts that the probe shoudld make before failing. One retry
#   will cause the probe to be cleaned once and make a second probe attempt.
#   Default: 1
